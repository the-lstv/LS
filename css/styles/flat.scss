@import "../variables.scss";

[ls-style="flat"] {

    --border-radius-tiny:     2px;
    --border-radius-small:    4px;
    --border-radius:          7px;
    --border-radius-medium:   12px;
    --border-radius-large:    16px;
    --border-radius-xlarge:   20px;
    --border-radius-xxlarge:  24px;
    --border-radius-full:     100px;
    --border-radius-circle:   50%;

    #{$button}, input, select, textarea {
        border-radius: var(--border-radius);
    }

    #{$button} {
        background-color: var(--accent-35);
        color: var(--on-accent);

        &:not(:disabled, .no-effect) {
            &:hover, &:focus {
                background-color: var(--accent-40);
            }

            &:active {
                background-color: var(--accent-30);
            }

            &:focus {
                outline: 3px solid var(--accent-mix-10);
            }

            &:focus-visible {
                outline: 3px solid currentColor;
            }
        }

        &:disabled {
            opacity: 0.8;
            filter: saturate(0.6);
            cursor: not-allowed;
            background: var(--elevate-2);
            color: var(--on-transparent);
        }
    }

    #{$button}:is(.clear, .outline) {
        background: none;
        color: var(--on-background);
    }

    #{$button}.circle {
        border-radius: 50%;
    }

    #{$button}.square {
        border-radius: var(--border-radius)
    }

    #{$button}:is(.clear, .outline, .elevated):not(:disabled) {
        &:hover, &:focus {
            background-color: var(--accent-mix-40);
        }

        &:active {
            background-color: var(--accent-mix-20);
        }
    }

    #{$button}.clear {
        &:hover, &:focus {
            color: var(--on-transparent);
        }
    }

    #{$button}.outline {
        border: 1px solid var(--accent-70);
    }

    #{$button}.elevated {
        background-color: var(--accent-mix-20);
        color: var(--on-transparent);

        &:focus-visible {
            outline: 3px solid currentColor;
        }

        &:disabled {
            background: var(--accent-mix-10);
        }
    }

    #{$button}.pill {
        border-radius: var(--border-radius-full);
        padding: var(--padding-control-v) var(--padding-control-h-pill);
    }

    #{$button}.small {
        --padding-control-h: 10px;
        font-size: x-small;
    }

    #{$textInput}:not(.clear) {
        --background: var(--elevate-0, var(--surface-n2));
        background: var(--background);
        border: 2px solid var(--background);
        // border: 2px solid var(--elevate-0);

        &:focus {
            border: 2px solid var(--accent-focus, var(--accent));
            --background: var(--accent-mix-10);
        }
    }

    .ls-checkbox > span, .ls-radio > span {
        border: 2px solid var(--elevate-2);
        border-radius: var(--border-radius-small);
        transition: background-color 0.2s, transform 0.2s;
    }

    .ls-radio > span {
        border-radius: 50%;
    }

    :is(.ls-checkbox, .ls-radio) > span::before {
        content: "";
        border-radius: 50%;
        position: absolute;
        inset: -0.8em;
        transition: background-color 0.2s, transform 0.2s;
        transform: scale(0.8);
        opacity: .5;
    }

    .ls-radio > span::after {
        background: var(--accent);
        border-radius: 50%;
    }

    :is(.ls-checkbox, .ls-radio) > input:disabled ~ span::before {
        display: none;
    }

    :is(.ls-checkbox, .ls-radio):active > span::before {
        background: var(--accent-mix-20);
        transform: scale(1);
    }

    .ls-checkbox > input:checked ~ span {
        background: var(--accent);
        border: none;
    }

    .ls-radio > input:checked ~ span {
        border-color: var(--accent);
    }

    :is(.ls-checkbox, .ls-radio) > input:disabled ~ span {
        border: 2px solid var(--elevate-1);
        cursor: not-allowed;
    }
}