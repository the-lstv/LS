@use "sass:map";
@use "sass:color";

$colors: (
    "navy":           rgb(40, 28, 108),
    "blue":           rgb(0, 133, 255),
    "pastel-indigo":  rgb(70, 118, 181),
    "lapis":          rgb(34, 114, 154),
    "teal":           rgb(0, 128, 128),
    "pastel-teal":    rgb(69, 195, 205),
    "aquamarine":     rgb(58, 160, 125),
    "green":          rgb(25, 135, 84),
    "lime":           rgb(133, 210, 50),
    "neon":           rgb(173, 255, 110),
    "yellow":         rgb(255, 236, 32),
    "orange":         rgb(255, 140, 32),
    "deep-orange":    rgb(255, 112, 52),
    "red":            rgb(245, 47, 47),
    "rusty-red":      rgb(220, 53, 69),
    "pink":           rgb(230, 52, 164),
    "hotpink":        rgb(245, 100, 169),
    "purple":         rgb(155, 77, 175),
    "soap":           rgb(210, 190, 235),
    "burple":         rgb(81, 101, 246),
    "white":          rgb(255, 255, 255),
);

:root {
    @each $name, $color in $colors {
        --ls-color-#{$name}: #{$color};
    }
    --ls-color-lstv-red: rgb(237, 108, 48);
    --ls-color-lstv-yellow: rgb(252, 194, 27);
    --ls-color-lstv-blue: rgb(64, 192, 231);
    --ls-color-mint: rgb(106, 238, 189);

    // 0 and 100 will always be exactly black or white
    --base-0:  rgb(0, 0, 0);
    --base-100:  rgb(255, 255, 255);
}


@mixin accent($color) {
    --accent-10: #{generate-tone($color, 10)};
    --accent-20: #{generate-tone($color, 20)};
    --accent-30: #{generate-tone($color, 30)};
    --accent-35: #{generate-tone($color, 35)};
    --accent-40: #{generate-tone($color, 40)};
    --accent-45: #{generate-tone($color, 45)};
    --accent-50: #{generate-tone($color, 50)};
    --accent-55: #{generate-tone($color, 55)};
    --accent-60: #{generate-tone($color, 60)};
    --accent-70: #{generate-tone($color, 70)};
    --accent-80: #{generate-tone($color, 80)};
    --accent-90: #{generate-tone($color, 90)};
    --accent-95: #{generate-tone($color, 95)};
}

@mixin base-colors($color){
    --base-6 : #{generate-tone($color, 6 , 16)};
    --base-8 : #{generate-tone($color, 8 , 16)};
    --base-10: #{generate-tone($color, 10, 16)};
    --base-15: #{generate-tone($color, 15, 16)};
    --base-20: #{generate-tone($color, 20, 16)};
    --base-25: #{generate-tone($color, 25, 16)};
    --base-30: #{generate-tone($color, 30, 16)};
    --base-35: #{generate-tone($color, 35, 16)};
    --base-40: #{generate-tone($color, 40, 16)};
    --base-45: #{generate-tone($color, 45, 16)};
    --base-50: #{generate-tone($color, 50, 16)};
    --base-55: #{generate-tone($color, 55, 16)};
    --base-60: #{generate-tone($color, 60, 16)};
    --base-65: #{generate-tone($color, 65, 16)};
    --base-70: #{generate-tone($color, 70, 16)};
    --base-75: #{generate-tone($color, 75, 16)};
    --base-80: #{generate-tone($color, 80, 16)};
    --base-85: #{generate-tone($color, 85, 16)};
    --base-90: #{generate-tone($color, 90, 16)};
    --base-95: #{generate-tone($color, 95, 16)};
    --base-98: #{generate-tone($color, 98, 16)};
}


@each $name, $color in $colors {
    $selector: "[ls-accent=\"#{$name}\"]";

    @if $name == "blue" {
        $selector: "#{$selector}, :root";
    }
    
    @else if $name == "white" {
        $selector: "#{$selector}, [ls-accent=\"auto\"]";
    }

    @if $name == "white" {
        #{$selector + ", [ls-accent].ls-static"} {
            @include base-colors($color);
        }
    }

    #{$selector} {
        @if($name != "white") {
            @include base-colors($color);
        }
        
        @include accent($color);
    }
}

[class*="level-"], ls-box, [ls-accent] {
    color: var(--color);
}

[class*="level-"], ls-box {
    background: var(--background);
}

@for $i from -3 through 10 {
    $level: if($i < 0, "n#{abs($i)}", "#{$i}");

    $selector: "#{$level}";

    @if $i == 0 {
        $selector: "#{$selector}, :root";
    } @else if $i == 1 {
        $selector: "#{$selector}, ls-box";
    }

    .level-#{$selector} {
        --background: var(--surface-#{$level});

        @if $i > -3 {
            --elevate-0: var(--surface-#{if($i - 1 < 0, "n#{abs($i - 1)}", "#{$i - 1}")});

            @if $i > -2 {
                --elevate-n1: var(--surface-#{if($i - 2 < 0, "n#{abs($i - 2)}", "#{$i - 2}")});
            }
        }

        --elevate: var(--surface-#{if($i + 1 < 0, "n#{abs($i + 1)}", "#{$i + 1}")});

        @if $i < 10 {
            --elevate-1: var(--surface-#{if($i + 2 < 0, "n#{abs($i + 2)}", "#{$i + 2}")});

            @if $i < 9 {
                --elevate-2: var(--surface-#{if($i + 3 < 0, "n#{abs($i + 3)}", "#{$i + 3}")});
    
                @if $i < 8 {
                    --elevate-3: var(--surface-#{if($i + 4 < 0, "n#{abs($i + 4)}", "#{$i + 4}")});
                }
            }
        }

        @if $i >= 7 {
            --color: var(--surface-0);
        }
    }

    @if $i <= 5 and $i >= 0 {
        .level-#{$level}.color {
            @if $i == 5 {
                --background: var(--accent-40);
                --color: var(--on-accent);
            } @else {
                @if $i == 0 {
                    --background: var(--accent-mix-10);
                } @else {
                    --background: var(--accent-mix-#{2 * $i}0);
                }
            }
        }
    }
}

.level-top {
    --background: var(--surface-top);
    --color: var(--surface-0);
}

[class*="level-"].round {
    border-radius: var(--border-radius);
}

[class*="level-"].round-lg {
    border-radius: var(--border-radius-large);
}

[class*="level-"].pill {
    border-radius: var(--border-radius-full);
}

[ls-accent], ls-box:not(.color), html, [class*="level-"]:not(.color), .sidebar-items {
    --accent: var(--accent-40);
    --accent-mix-10: color-mix(in oklab, var(--background) 100%, var(--accent) 10%);
    --accent-mix-20: color-mix(in oklab, var(--background) 100%, var(--accent) 20%);
    --accent-mix-40: color-mix(in oklab, var(--background) 100%, var(--accent) 40%);
    --accent-mix-60: color-mix(in oklab, var(--background) 100%, var(--accent) 60%);
    --accent-mix-80: color-mix(in oklab, var(--background) 70%, var(--accent) 100%);
}